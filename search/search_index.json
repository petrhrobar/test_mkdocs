{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Code Documentation \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Code Documentation"},{"location":"#code-documentation","text":"For full documentation visit mkdocs.org .","title":"Code Documentation"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"docs/","text":"This documents rc module import pandas as pd","title":"Docs"},{"location":"code/","text":"IOndex \u00b6 This is index markdown file Reference \u00b6","title":"IOndex"},{"location":"code/#iondex","text":"This is index markdown file","title":"IOndex"},{"location":"code/#reference","text":"","title":"Reference"},{"location":"code/backend/","text":"Backend \u00b6 We need backend file and folder for i in range ( 20 ): print ( i ) Run the tests with: A collection of functions to be used in mutate / map -verbs. impute \u00b6 This stateful function can be used to calculate row numbers. Uses exponential smoothing. Parameters: Name Type Description Default key the key to apply the smoothing to required strategy the strategy to apply required fallback if the strategy fails, what value to use required Usage: from clumper import Clumper from clumper.sequence import impute list_dicts = [ { 'a' : 1 , 'b' : 2 }, { 'a' : 2 , 'b' : 3 }, { 'a' : 3 }, { 'a' : 4 , 'b' : 6 }, { 'a' : 5 }, ] ( Clumper ( list_dicts ) . mutate ( b = impute ( 'b' , strategy = 'prev' ), c = lambda d : d [ 'a' ] + d [ 'b' ]) . collect ()) ( Clumper ( list_dicts ) . mutate ( b = impute ( 'b' , strategy = 'value' , fallback = 0 )) . collect ())","title":"Backend"},{"location":"code/backend/#backend","text":"We need backend file and folder for i in range ( 20 ): print ( i ) Run the tests with: A collection of functions to be used in mutate / map -verbs.","title":"Backend"},{"location":"code/backend/#src.code.impute","text":"This stateful function can be used to calculate row numbers. Uses exponential smoothing. Parameters: Name Type Description Default key the key to apply the smoothing to required strategy the strategy to apply required fallback if the strategy fails, what value to use required Usage: from clumper import Clumper from clumper.sequence import impute list_dicts = [ { 'a' : 1 , 'b' : 2 }, { 'a' : 2 , 'b' : 3 }, { 'a' : 3 }, { 'a' : 4 , 'b' : 6 }, { 'a' : 5 }, ] ( Clumper ( list_dicts ) . mutate ( b = impute ( 'b' , strategy = 'prev' ), c = lambda d : d [ 'a' ] + d [ 'b' ]) . collect ()) ( Clumper ( list_dicts ) . mutate ( b = impute ( 'b' , strategy = 'value' , fallback = 0 )) . collect ())","title":"impute"}]}